{
	"id": "5be2da74a97d2cc31f70013258d8f802",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"a.sol": {
				"content": "pragma solidity ^0.5.0;\ncontract VerifySig {\n function splitSignature(bytes memory sig)\n       public\n       pure\n       returns (uint8, bytes32, bytes32)\n   {\n       require(sig.length == 65);\n       bytes32 r;\n       bytes32 s;\n       uint8 v;\n       assembly {\n           // first 32 bytes, after the length prefix\n           r := mload(add(sig, 32))\n           // second 32 bytes\n           s := mload(add(sig, 64))\n           // final byte (first byte of the next 32 bytes)\n           v := byte(0, mload(add(sig, 96)))\n       }\n     \n       return (v, r, s);\n   }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"a.sol": {
				"VerifySig": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"a.sol\":24:570  contract VerifySig {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"a.sol\":24:570  contract VerifySig {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"a.sol\":24:570  contract VerifySig {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"a.sol\":24:570  contract VerifySig {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa7bb5803\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"a.sol\":46:568  function splitSignature(bytes memory sig)... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"a.sol\":46:568  function splitSignature(bytes memory sig)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_6:\n        /* \"a.sol\":46:568  function splitSignature(bytes memory sig)... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"a.sol\":46:568  function splitSignature(bytes memory sig)... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_8:\n        /* \"a.sol\":46:568  function splitSignature(bytes memory sig)... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"a.sol\":46:568  function splitSignature(bytes memory sig)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_9:\n        /* \"a.sol\":130:135  uint8 */\n      0x00\n        /* \"a.sol\":137:144  bytes32 */\n      dup1\n        /* \"a.sol\":146:153  bytes32 */\n      0x00\n        /* \"a.sol\":189:191  65 */\n      0x41\n        /* \"a.sol\":175:178  sig */\n      dup5\n        /* \"a.sol\":175:185  sig.length */\n      mload\n        /* \"a.sol\":175:191  sig.length == 65 */\n      eq\n        /* \"a.sol\":167:192  require(sig.length == 65) */\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n        /* \"a.sol\":201:210  bytes32 r */\n      0x00\n        /* \"a.sol\":219:228  bytes32 s */\n      dup1\n        /* \"a.sol\":237:244  uint8 v */\n      0x00\n        /* \"a.sol\":349:351  32 */\n      0x20\n        /* \"a.sol\":344:347  sig */\n      dup8\n        /* \"a.sol\":340:352  add(sig, 32) */\n      add\n        /* \"a.sol\":334:353  mload(add(sig, 32)) */\n      mload\n        /* \"a.sol\":329:353  r := mload(add(sig, 32)) */\n      swap3\n      pop\n        /* \"a.sol\":415:417  64 */\n      0x40\n        /* \"a.sol\":410:413  sig */\n      dup8\n        /* \"a.sol\":406:418  add(sig, 64) */\n      add\n        /* \"a.sol\":400:419  mload(add(sig, 64)) */\n      mload\n        /* \"a.sol\":395:419  s := mload(add(sig, 64)) */\n      swap2\n      pop\n        /* \"a.sol\":518:520  96 */\n      0x60\n        /* \"a.sol\":513:516  sig */\n      dup8\n        /* \"a.sol\":509:521  add(sig, 96) */\n      add\n        /* \"a.sol\":503:522  mload(add(sig, 96)) */\n      mload\n        /* \"a.sol\":500:501  0 */\n      0x00\n        /* \"a.sol\":495:523  byte(0, mload(add(sig, 96))) */\n      byte\n        /* \"a.sol\":490:523  v := byte(0, mload(add(sig, 96))) */\n      swap1\n      pop\n        /* \"a.sol\":554:555  v */\n      dup1\n        /* \"a.sol\":557:558  r */\n      dup4\n        /* \"a.sol\":560:561  s */\n      dup4\n        /* \"a.sol\":546:562  return (v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"a.sol\":46:568  function splitSignature(bytes memory sig)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820ae8ce91d43f8a5e3c1ac38a136beb10190c43ce0d1e1bf5bcf17777f862f0e3664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061018b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a7bb580314610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610113565b604051808460ff1660ff168152602001838152602001828152602001935050505060405180910390f35b6000806000604184511461012657600080fd5b60008060006020870151925060408701519150606087015160001a9050808383955095509550505050919390925056fea265627a7a72315820ae8ce91d43f8a5e3c1ac38a136beb10190c43ce0d1e1bf5bcf17777f862f0e3664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP DUP1 DUP4 DUP4 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xAE DUP13 0xE9 SAR NUMBER 0xF8 0xA5 0xE3 0xC1 0xAC CODESIZE LOG1 CALLDATASIZE 0xBE 0xB1 ADD SWAP1 0xC4 EXTCODECOPY 0xE0 0xD1 0xE1 0xBF JUMPDEST 0xCF OR PUSH24 0x7F862F0E3664736F6C634300051100320000000000000000 ",
							"sourceMap": "24:546:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24:546:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a7bb580314610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610113565b604051808460ff1660ff168152602001838152602001828152602001935050505060405180910390f35b6000806000604184511461012657600080fd5b60008060006020870151925060408701519150606087015160001a9050808383955095509550505050919390925056fea265627a7a72315820ae8ce91d43f8a5e3c1ac38a136beb10190c43ce0d1e1bf5bcf17777f862f0e3664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP DUP1 DUP4 DUP4 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xAE DUP13 0xE9 SAR NUMBER 0xF8 0xA5 0xE3 0xC1 0xAC CODESIZE LOG1 CALLDATASIZE 0xBE 0xB1 ADD SWAP1 0xC4 EXTCODECOPY 0xE0 0xD1 0xE1 0xBF JUMPDEST 0xCF OR PUSH24 0x7F862F0E3664736F6C634300051100320000000000000000 ",
							"sourceMap": "24:546:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24:546:0;;;;;;;;;;;;;;;;;;;46:522;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46:522:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;46:522:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;46:522:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;46:522:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;46:522:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:5;137:7;146;189:2;175:3;:10;:16;167:25;;;;;;201:9;219;237:7;349:2;344:3;340:12;334:19;329:24;;415:2;410:3;406:12;400:19;395:24;;518:2;513:3;509:12;503:19;500:1;495:28;490:33;;554:1;557;560;546:16;;;;;;;;;46:522;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "79000",
								"executionCost": "129",
								"totalCost": "79129"
							},
							"external": {
								"splitSignature(bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 570,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "MSTORE"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "CODECOPY"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 570,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820ae8ce91d43f8a5e3c1ac38a136beb10190c43ce0d1e1bf5bcf17777f862f0e3664736f6c63430005110032",
									".code": [
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "POP"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "LT"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "SHR"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH",
											"value": "A7BB5803"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 570,
											"name": "REVERT"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP3"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DIV"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MUL"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP3"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP3"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP3"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP5"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP3"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SUB"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "RETURN"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 137,
											"end": 144,
											"name": "DUP1"
										},
										{
											"begin": 146,
											"end": 153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 189,
											"end": 191,
											"name": "PUSH",
											"value": "41"
										},
										{
											"begin": 175,
											"end": 178,
											"name": "DUP5"
										},
										{
											"begin": 175,
											"end": 185,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 191,
											"name": "EQ"
										},
										{
											"begin": 167,
											"end": 192,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 167,
											"end": 192,
											"name": "JUMPI"
										},
										{
											"begin": 167,
											"end": 192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 167,
											"end": 192,
											"name": "DUP1"
										},
										{
											"begin": 167,
											"end": 192,
											"name": "REVERT"
										},
										{
											"begin": 167,
											"end": 192,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 167,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 349,
											"end": 351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 344,
											"end": 347,
											"name": "DUP8"
										},
										{
											"begin": 340,
											"end": 352,
											"name": "ADD"
										},
										{
											"begin": 334,
											"end": 353,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP3"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 410,
											"end": 413,
											"name": "DUP8"
										},
										{
											"begin": 406,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 419,
											"name": "MLOAD"
										},
										{
											"begin": 395,
											"end": 419,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 419,
											"name": "POP"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 513,
											"end": 516,
											"name": "DUP8"
										},
										{
											"begin": 509,
											"end": 521,
											"name": "ADD"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "MLOAD"
										},
										{
											"begin": 500,
											"end": 501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 495,
											"end": 523,
											"name": "BYTE"
										},
										{
											"begin": 490,
											"end": 523,
											"name": "SWAP1"
										},
										{
											"begin": 490,
											"end": 523,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 555,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP4"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP4"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "SWAP6"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "SWAP6"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "SWAP6"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 546,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP4"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "SWAP3"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 568,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"splitSignature(bytes)": "a7bb5803"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"a.sol\":\"VerifySig\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"a.sol\":{\"keccak256\":\"0x1265fb22f124361aa4829d943ac1e159bf2a2f8d4a7eb50f03ffd7a146470c7b\",\"urls\":[\"bzz-raw://484a12e2cfa07ece0aba2f6d3d1439dfd3f0913e90b54e9e9637b514118191cd\",\"dweb:/ipfs/QmTcDXJw7emC33LypshPvMuYwJkYrdq4VXBcThF8diLjBa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"a.sol": {
				"ast": {
					"absolutePath": "a.sol",
					"exportedSymbols": {
						"VerifySig": [
							36
						]
					},
					"id": 37,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "VerifySig",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "158:410:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 13,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "175:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "175:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3635",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "189:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "175:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54,
															55
														],
														"referencedDeclaration": 54,
														"src": "167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "167:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "167:25:0"
											},
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "201:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 19,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "201:9:0"
											},
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "219:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 22,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 24,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "219:9:0"
											},
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "237:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 25,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "237:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "237:7:0"
											},
											{
												"externalReferences": [
													{
														"r": {
															"declaration": 20,
															"isOffset": false,
															"isSlot": false,
															"src": "329:1:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 3,
															"isOffset": false,
															"isSlot": false,
															"src": "344:3:0",
															"valueSize": 1
														}
													},
													{
														"v": {
															"declaration": 26,
															"isOffset": false,
															"isSlot": false,
															"src": "490:1:0",
															"valueSize": 1
														}
													},
													{
														"s": {
															"declaration": 23,
															"isOffset": false,
															"isSlot": false,
															"src": "395:1:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 3,
															"isOffset": false,
															"isSlot": false,
															"src": "410:3:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 3,
															"isOffset": false,
															"isSlot": false,
															"src": "513:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 28,
												"nodeType": "InlineAssembly",
												"operations": "{\n    r := mload(add(sig, 32))\n    s := mload(add(sig, 64))\n    v := byte(0, mload(add(sig, 96)))\n}",
												"src": "253:279:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 29,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "554:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 30,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "557:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "560:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 32,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "553:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(uint8,bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 11,
												"id": 33,
												"nodeType": "Return",
												"src": "546:16:0"
											}
										]
									},
									"documentation": null,
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "70:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "70:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "69:18:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "130:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 5,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "130:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "137:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 7,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 9,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "129:25:0"
									},
									"scope": 36,
									"src": "46:522:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 37,
							"src": "24:546:0"
						}
					],
					"src": "0:570:0"
				},
				"id": 0
			}
		}
	}
}