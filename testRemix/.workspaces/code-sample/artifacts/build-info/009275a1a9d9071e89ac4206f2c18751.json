{
	"id": "009275a1a9d9071e89ac4206f2c18751",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"hh.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract TestPayable {\n    uint x;\n    uint y;\n    // This function is called for all messages sent to\n    // this contract, except plain Ether transfers\n    // (there is no other function except the receive function).\n    // Any call with non-empty calldata to this contract will execute\n    // the fallback function (even if Ether is sent along with the call).\n    fallback() external payable { x = 1; y = msg.value; }\n\n    // This function is called for plain Ether transfers, i.e.\n    // for every call with empty calldata.\n    receive() external payable { x = 2; y = msg.value; }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"hh.sol": {
				"TestPayable": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hh.sol\":58:644  contract TestPayable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"hh.sol\":58:644  contract TestPayable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"hh.sol\":623:624  2 */\n      0x02\n        /* \"hh.sol\":619:620  x */\n      0x00\n        /* \"hh.sol\":619:624  x = 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"hh.sol\":630:639  msg.value */\n      callvalue\n        /* \"hh.sol\":626:627  y */\n      0x01\n        /* \"hh.sol\":626:639  y = msg.value */\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"hh.sol\":58:644  contract TestPayable {... */\n    tag_2:\n        /* \"hh.sol\":459:460  1 */\n      0x01\n        /* \"hh.sol\":455:456  x */\n      0x00\n        /* \"hh.sol\":455:460  x = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"hh.sol\":466:475  msg.value */\n      callvalue\n        /* \"hh.sol\":462:463  y */\n      0x01\n        /* \"hh.sol\":462:475  y = msg.value */\n      dup2\n      swap1\n      sstore\n      stop\n\n    auxdata: 0xa2646970667358221220002b0e345112394f2f4d7da2108b8f0dede10315081b4e1e26b25b91f241c4fa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50605e80601d6000396000f3fe6080604052366018576002600081905550346001819055005b600160008190555034600181905500fea2646970667358221220002b0e345112394f2f4d7da2108b8f0dede10315081b4e1e26b25b91f241c4fa64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x18 JUMPI PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x2B 0xE CALLVALUE MLOAD SLT CODECOPY 0x4F 0x2F 0x4D PUSH30 0xA2108B8F0DEDE10315081B4E1E26B25B91F241C4FA64736F6C6343000811 STOP CALLER ",
							"sourceMap": "58:586:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052366018576002600081905550346001819055005b600160008190555034600181905500fea2646970667358221220002b0e345112394f2f4d7da2108b8f0dede10315081b4e1e26b25b91f241c4fa64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x18 JUMPI PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x2B 0xE CALLVALUE MLOAD SLT CODECOPY 0x4F 0x2F 0x4D PUSH30 0xA2108B8F0DEDE10315081B4E1E26B25B91F241C4FA64736F6C6343000811 STOP CALLER ",
							"sourceMap": "58:586:0:-:0;;;;;;623:1;619;:5;;;;630:9;626:1;:13;;;;58:586;459:1;455;:5;;;;466:9;462:1;:13;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "18800",
								"executionCost": "69",
								"totalCost": "18869"
							},
							"external": {
								"": "44259"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 644,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220002b0e345112394f2f4d7da2108b8f0dede10315081b4e1e26b25b91f241c4fa64736f6c63430008110033",
									".code": [
										{
											"begin": 58,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 644,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 619,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 619,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 639,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 639,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 455,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 460,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 455,
											"end": 460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 475,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 475,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 475,
											"name": "STOP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"hh.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hh.sol\":\"TestPayable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"hh.sol\":{\"keccak256\":\"0xca8a519a11b53c2acbe67f55d4eb971bb974b4bd0f9c5cb329e1c88bf34a9d5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed1f011bb710a3136f2455d2c971e9374babfd058b6916cd59c155b9adfaf204\",\"dweb:/ipfs/QmdDpgyj9suUJPCS2LFxVCAo2GhJNk6zdR2ZLouW429xrn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "hh.sol:TestPayable",
								"label": "x",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "hh.sol:TestPayable",
								"label": "y",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"hh.sol": {
				"ast": {
					"absolutePath": "hh.sol",
					"exportedSymbols": {
						"TestPayable": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestPayable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "TestPayable",
							"nameLocation": "67:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "90:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "85:6:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "85:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "y",
									"nameLocation": "102:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "97:6:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "97:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "453:25:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "455:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "459:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "455:5:0"
											},
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "462:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "466:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "470:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "466:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "462:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "462:13:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:0:0"
									},
									"scope": 32,
									"src": "425:53:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "617:25:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "623:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "619:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "619:5:0"
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "626:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "630:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "634:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "630:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "626:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "626:13:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:0:0"
									},
									"scope": 32,
									"src": "590:52:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "58:586:0",
							"usedErrors": []
						}
					],
					"src": "32:613:0"
				},
				"id": 0
			}
		}
	}
}